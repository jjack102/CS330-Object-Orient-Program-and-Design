buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "java"
    id "application"
    id "eclipse"

    id "project-report"
    id "jacoco"
    id "pmd"
}

java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
    // testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testImplementation "org.hamcrest:hamcrest-library:2.2"
}

jar {
    archiveBaseName = "CreatePolyhedra"

    manifest {
        attributes(
            "Main-Class": "polyhedra.CreatePolyhedra"
        )
    }
}

application {
    mainClassName = "polyhedra.CreatePolyhedra"
}

run {
    mainClass = "polyhedra.CreatePolyhedra"
    args = ["src/main/resources/polyhedra1.txt", "2"]
}

test {
    useJUnitPlatform()
    reports {
        html.enabled = true
    }
    ignoreFailures = true

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

javadoc {
    failOnError false
}

//------------------------------------------------------------------------------
// Analysis Tools
//------------------------------------------------------------------------------

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled true
    }
}

pmd {
    ignoreFailures = true
    ruleSets = [
        "category/java/bestpractices.xml",
        "category/java/codestyle.xml",
        "category/java/design.xml",
        "category/java/errorprone.xml",
        "category/java/performance.xml"
    ]
}


